mechampg_data <- read.csv('MechaCar_mpg.csv') #import mpg datasethead(mechampg_data) #Reviewing datalm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD,data=mechampg_data) #generate multiple linear regression modelsummary(lm(mpg ~ vehicle.length + vehicle.weight + spoiler.angle + ground.clearance + AWD,data=mechampg_data)) #generate summary statisticsplt <- ggplot(mechampg_data, aes(x=mpg,y=vehicle.length)) #import dataset into ggplotplt + geom_point() + xlab("Miles per Gallon") + ylab("Vehicle Length") #add scatter plot with labelscor(mechampg_data$mpg, mechampg_data$vehicle.length) #calculate correlation coefficient for mpg vs vehicle lengthcor(mechampg_data$mpg, mechampg_data$ground.clearance) #calculate correlation coefficient for mpg vs ground clearancesummary(lm(mpg ~ vehicle.length,mechampg_data)) #summarize a linear model for mpg vs vehicle lengthsuscoil_data <- read.csv('Suspension_Coil.csv') #import suspension coil datasethead(suscoil_data) #Review datasummarize_suscoil <- suscoil_data %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Var_PSI=var(PSI),ST_PSI=sd(PSI)) #create summary table with mean, median, variance and standard deviationggplot(suscoil_data,aes(x=PSI)) + geom_density() #visualize distribution using density plotsample_suscoil <- suscoil_data %>% sample_n(50) # random sample of 50 datapointst.test((sample_suscoil$PSI),mu=mean(suscoil_data$PSI)) #compare sample vs population meanmpgmod_data <- read.csv('mpg_modified.csv') #import modified mpg datahead(mpgmod_data) #Reviewing datamechampg_summary <- mechampg_data %>% group_by(vehicle.length) %>% summarize(Mean_MPG=mean(mpg)) #create summary table of MechaCars by vehicle lengthmpg_summary <- mpgmod_data %>% group_by(class) %>% summarize(Mean_City=mean(cty),Mean_Hwy=mean(hwy))plt <- ggplot(mpg_summary,aes(x=class,y=Mean_City)) #import dataset into ggplot2plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean MPG") + #add scatter plot with labelsgeom_errorbar(aes(ymin=Mean_Hwy-Mean_City,ymax=Mean_City+Mean_Hwy)) #overlay with error bars